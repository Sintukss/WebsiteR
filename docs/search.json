[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "",
    "text": "title: “R studio ITF studentiem”\n\nPrasības kredītpunktu iegūšanai\n\nIeskaite ar atzīmi. Izstrādāti laboratorijas darbi. Sekmīgi uzrakstīts 2 k.d. (80%). Izstrādāts un aizstāvēts mājas darbs (20%). Mājas darbā ir jāizmanto divas dažādas statistiskās metodes reālo datu apstrādei.\n\nMājas darbs\n\nMājas darbs (2 balles): Power Point prezentācija, kurā atspoguļo divu grafisko attēlu izveidošanu R vai divu metožu pielietošanu datu apstrādē ar R, prezentācijas beigās nodefinēts uzdevums auditorijai.\n\nIzmantojamā literatūra\n\n\nhttps://www.stat.auckland.ac.nz/~paul/RGraphics/rgraphics.html\nhttp://www.itc.nl/~rossiter/teach/R/R_corregr.pdf\nQuick-R http://www.statmethods.net/\nhttp://cran.r-project.org/doc/contrib/Martinez-RforBiologistv1.1.pdf\nhttp://cran.r-project.org/doc/contrib/Seefeld_StatsRBio.pdf\nhttps://support.rstudio.com/hc/en-us/articles/200404846-Working-in-the-Console\nhttp://dendro.daba.lv/R/gramata/Praktiska_biometrija.pdf\nhttp://dendro.daba.lv/R/gramata/R_commander_pamaciba.pdf\nhttps://bookdown.org/content/6ef13ea6-4e86-4566-b665-ebcd19d45029/"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#itf-studentiem",
    "href": "index.html#itf-studentiem",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "ITF studentiem",
    "text": "ITF studentiem\nPrasības kredītpunktu iegūšanai\n\nIeskaite ar atzīmi. Izstrādāti laboratorijas darbi. Sekmīgi uzrakstīts 2 k.d. (80%). Izstrādāts un aizstāvēts mājas darbs (20%). Mājas darbā ir jāizmanto divas dažādas statistiskās metodes reālo datu apstrādei.\n\nMājas darbs\n\nMājas darbs (2 balles): Power Point prezentācija, kurā atspoguļo divu grafisko attēlu izveidošanu R vai divu metožu pielietošanu datu apstrādē ar R, prezentācijas beigās nodefinēts uzdevums auditorijai.\n\nIzmantojamā literatūra\n\n\nhttps://www.stat.auckland.ac.nz/~paul/RGraphics/rgraphics.html\nhttp://www.itc.nl/~rossiter/teach/R/R_corregr.pdf\nQuick-R http://www.statmethods.net/\nhttp://cran.r-project.org/doc/contrib/Martinez-RforBiologistv1.1.pdf\nhttp://cran.r-project.org/doc/contrib/Seefeld_StatsRBio.pdf\nhttps://support.rstudio.com/hc/en-us/articles/200404846-Working-in-the-Console\nhttp://dendro.daba.lv/R/gramata/Praktiska_biometrija.pdf\nhttp://dendro.daba.lv/R/gramata/R_commander_pamaciba.pdf\nhttps://bookdown.org/content/6ef13ea6-4e86-4566-b665-ebcd19d45029/\n\n\n\nIevads\n\nR is a complete programming language, developed mostly by statisticians. R is free compare to other statistical software Microsoft Excel, SAS, IBM SPSS, Stata, Minitab R: dynamic, open source project: http://www.r-project.org - mainly command line-based (graphical user interfaces not well-developed) - software both for doing statistical analyses and graphics containing: - all statistical standard methods - several graphical sub-systems. - advanced methods available through extension packages (There are thousands of helpful R packages for you to use) - several integrated environments: RStudio (all platforms)\n\n\n\nData set\n\n\nData sets consist of columns or vectors of the same length\ndata() #Overview of data set\n\nOverview of a data set(USJudgeRatings in R):\n\nShow variable names: names (USJudgeRatings)\n\n\nnames(USJudgeRatings)\n\n [1] \"CONT\" \"INTG\" \"DMNR\" \"DILG\" \"CFMG\" \"DECI\" \"PREP\" \"FAMI\" \"ORAL\" \"WRIT\"\n[11] \"PHYS\" \"RTEN\"\n\n\n\nShow first lines: head(USJudgeRatings, 7)\n\n\nhead(USJudgeRatings, 7, data=USJudgeRatings)\n\n               CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nAARONSON,L.H.   5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nALEXANDER,J.M.  6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nARMENTANO,A.J.  7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nBERDON,R.I.     6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nBRACKEN,J.J.    7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\nBURNS,E.B.      6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nCALLAHAN,R.J.  10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\n\n\n\n\n\nData set:USJudgeRatings\n\n\nSelect certain columns or rows (use the square brackets[]):\n\nBy column index:\n\nUSJudgeRatings [ , 1] (column1)\n\nUSJudgeRatings[10 , 1]\n\n[1] 8.2\n\n\nUSJudgeRatings [ , c(1, 2)] (column 1 and 2)\n\nUSJudgeRatings [10 , c(1, 2)]\n\n             CONT INTG\nDANNEHY,J.F.  8.2  7.9\n\n\nUSJudgeRatings [ , -1] (-1 column)\n\nUSJudgeRatings [10 , -1]\n\n             INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nDANNEHY,J.F.  7.9  6.7  8.1  7.9    8  7.9  8.1  7.7  7.8  8.5  7.9\n\n\n\nBy row index:\n\nUSJudgeRatings [1, ] (row 1)\n\nUSJudgeRatings [1, ]\n\n              CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nAARONSON,L.H.  5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1    7  8.3  7.8\n\n\n\nBy column and row indices:\n\nUSJudgeRatings [1, 1] (row 1 and column 1)\n\nUSJudgeRatings [7, 2]\n\n[1] 9\n\n\n\nBy names:\n\nUSJudgeRatings[“PHYS”]\n\nUSJudgeRatings[\"PHYS\"]\n\n                PHYS\nAARONSON,L.H.    8.3\nALEXANDER,J.M.   8.5\nARMENTANO,A.J.   7.9\nBERDON,R.I.      8.8\nBRACKEN,J.J.     5.5\nBURNS,E.B.       8.6\nCALLAHAN,R.J.    9.1\nCOHEN,S.S.       6.8\nDALY,J.J.        8.8\nDANNEHY,J.F.     8.5\nDEAN,H.H.        8.4\nDEVITA,H.J.      6.9\nDRISCOLL,P.J.    8.1\nGRILLO,A.E.      6.2\nHADDEN,W.L.JR.   8.4\nHAMILL,E.C.      8.0\nHEALEY.A.H.      6.9\nHULL,T.C.        8.1\nLEVINE,I.        8.0\nLEVISTER,R.L.    7.2\nMARTIN,L.F.      7.5\nMCGRATH,J.F.     7.4\nMIGNONE,A.F.     4.7\nMISSAL,H.M.      7.8\nMULVEY,H.M.      8.7\nNARUK,H.J.       9.0\nO'BRIEN,F.J.     8.3\nO'SULLIVAN,T.J.  8.8\nPASKEY,L.        8.4\nRUBINOW,J.E.     8.9\nSADEN.G.A.       8.4\nSATANIELLO,A.G.  8.1\nSHEA,D.M.        8.7\nSHEA,J.F.JR.     8.8\nSIDOR,W.J.       6.3\nSPEZIALE,J.A.    8.0\nSPONZO,M.J.      8.1\nSTAPLETON,J.F.   8.5\nTESTO,R.J.       8.0\nTIERNEY,W.L.JR.  8.1\nWALL,R.A.        7.6\nWRIGHT,D.B.      8.3\nZARRILLI,K.J.    7.8\n\n\n\n\n\n\n\n\nGraphics in R\n\nR provides a remarkable variety of graphics:\n\nScatter plot:\n\n# library\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n# Keep 30 first rows in the mtcars natively available dataset\ndata=head(mtcars, 30)\n\n# 1/ add text with geom_text, use nudge to nudge the text\nggplot(data, aes(x=wt, y=mpg, color = hp)) +\n  geom_point(size = 0.5, alpha = 0.8) + # Show dots\n  geom_text(\n    label=rownames(data),\n    nudge_x = 0.25, nudge_y = 0.25, \n    check_overlap = T\n  ) + \n  labs(title = \"Recent turnout in European Union countries\",\n       x = \"Weight\",\n       y = \"Miles per Gallon\") + \n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_minimal()\n\n\n\n\nHistogram:\n\nhist(USJudgeRatings$ORAL, breaks=10, col=\"red\", xlab=\"ORAL\",\n     main=\"Histogram with normal curve\")\nxfit=seq(min(USJudgeRatings$ORAL), max(USJudgeRatings$ORAL),length(20))\nyfit=dnorm(xfit,mean=mean(USJudgeRatings$ORAL))\nyfit1=yfit*0.5*length(USJudgeRatings$ORAL)\nlines(xfit, yfit1, col=\"purple\", lwd=2)\n\n\n\n\nBox plot:\nBar plot:"
  },
  {
    "objectID": "index.html#ievads",
    "href": "index.html#ievads",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "Ievads",
    "text": "Ievads\n\nR is a complete programming language, developed mostly by statisticians. R is free compare to other statistical software Microsoft Excel, SAS, IBM SPSS, Stata, Minitab R: dynamic, open source project: http://www.r-project.org - mainly command line-based (graphical user interfaces not well-developed) - software both for doing statistical analyses and graphics containing: - all statistical standard methods - several graphical sub-systems. - advanced methods available through extension packages (There are thousands of helpful R packages for you to use) - several integrated environments: RStudio (all platforms)\n\n\nData set\n\n\nData sets consist of columns or vectors of the same length\ndata() #Overview of data set\n\nOverview of a data set(USJudgeRatings in R):\n\nShow variable names: names (USJudgeRatings)\n\n\nnames(USJudgeRatings)\n\n [1] \"CONT\" \"INTG\" \"DMNR\" \"DILG\" \"CFMG\" \"DECI\" \"PREP\" \"FAMI\" \"ORAL\" \"WRIT\"\n[11] \"PHYS\" \"RTEN\"\n\n\n\nShow first lines: head(USJudgeRatings, 7)\n\n\nhead(USJudgeRatings, 7, data=USJudgeRatings)\n\n               CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nAARONSON,L.H.   5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nALEXANDER,J.M.  6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nARMENTANO,A.J.  7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nBERDON,R.I.     6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nBRACKEN,J.J.    7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\nBURNS,E.B.      6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nCALLAHAN,R.J.  10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\n\n\n\n\n\n\n\nData set:USJudgeRatings\n\n\nSelect certain columns or rows (use the square brackets[]):\n\nBy column index:\n\nUSJudgeRatings [ , 1] (column1)\n\nUSJudgeRatings[10 , 1]\n\n[1] 8.2\n\n\nUSJudgeRatings [ , c(1, 2)] (column 1 and 2)\n\nUSJudgeRatings [10 , c(1, 2)]\n\n             CONT INTG\nDANNEHY,J.F.  8.2  7.9\n\n\nUSJudgeRatings [ , -1] (-1 column)\n\nUSJudgeRatings [10 , -1]\n\n             INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nDANNEHY,J.F.  7.9  6.7  8.1  7.9    8  7.9  8.1  7.7  7.8  8.5  7.9\n\n\n\nBy row index:\n\nUSJudgeRatings [1, ] (row 1)\n\nUSJudgeRatings [1, ]\n\n              CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nAARONSON,L.H.  5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1    7  8.3  7.8\n\n\n\nBy column and row indices:\n\nUSJudgeRatings [1, 1] (row 1 and column 1)\n\nUSJudgeRatings [7, 2]\n\n[1] 9\n\n\n\nBy names:\n\nUSJudgeRatings[“PHYS”]\n\nUSJudgeRatings[\"PHYS\"]\n\n                PHYS\nAARONSON,L.H.    8.3\nALEXANDER,J.M.   8.5\nARMENTANO,A.J.   7.9\nBERDON,R.I.      8.8\nBRACKEN,J.J.     5.5\nBURNS,E.B.       8.6\nCALLAHAN,R.J.    9.1\nCOHEN,S.S.       6.8\nDALY,J.J.        8.8\nDANNEHY,J.F.     8.5\nDEAN,H.H.        8.4\nDEVITA,H.J.      6.9\nDRISCOLL,P.J.    8.1\nGRILLO,A.E.      6.2\nHADDEN,W.L.JR.   8.4\nHAMILL,E.C.      8.0\nHEALEY.A.H.      6.9\nHULL,T.C.        8.1\nLEVINE,I.        8.0\nLEVISTER,R.L.    7.2\nMARTIN,L.F.      7.5\nMCGRATH,J.F.     7.4\nMIGNONE,A.F.     4.7\nMISSAL,H.M.      7.8\nMULVEY,H.M.      8.7\nNARUK,H.J.       9.0\nO'BRIEN,F.J.     8.3\nO'SULLIVAN,T.J.  8.8\nPASKEY,L.        8.4\nRUBINOW,J.E.     8.9\nSADEN.G.A.       8.4\nSATANIELLO,A.G.  8.1\nSHEA,D.M.        8.7\nSHEA,J.F.JR.     8.8\nSIDOR,W.J.       6.3\nSPEZIALE,J.A.    8.0\nSPONZO,M.J.      8.1\nSTAPLETON,J.F.   8.5\nTESTO,R.J.       8.0\nTIERNEY,W.L.JR.  8.1\nWALL,R.A.        7.6\nWRIGHT,D.B.      8.3\nZARRILLI,K.J.    7.8\n\n\n\n\n\n\n\noptions(warn=0)"
  },
  {
    "objectID": "index.html#graphics-in-r",
    "href": "index.html#graphics-in-r",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "Graphics in R",
    "text": "Graphics in R\n\nR provides a remarkable variety of graphics:\n\nScatter plot:\n\noptions(warn=-1)\n# library\nsuppressMessages(library(ggplot2))\n\n# Keep 30 first rows in the mtcars natively available dataset\ndata=head(mtcars, 30)\n\n# 1/ add text with geom_text, use nudge to nudge the text\nggplot(data, aes(x=wt, y=mpg, color = hp)) +\n  geom_point(size = 0.5, alpha = 0.8) + # Show dots\n  geom_text(\n    label=rownames(data),\n    nudge_x = 0.25, nudge_y = 0.25,\n    check_overlap = T\n  ) + \n  labs(title = \"Svara ietekme uz automašīnu nobraukumu\",\n       x = \"Svars (1000 mārciņas)\",\n       y = \"Jūdzes/(ASV) galons\") + \n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_minimal()\n\n\n\n\nHistogram:\n\nhist(USJudgeRatings$ORAL, breaks=10, col=\"red\", xlab=\"ORAL\",\n     main=\"Histogram with normal curve\")\nxfit=seq(min(USJudgeRatings$ORAL), max(USJudgeRatings$ORAL),length(20))\nyfit=dnorm(xfit,mean=mean(USJudgeRatings$ORAL))\nyfit1=yfit*0.5*length(USJudgeRatings$ORAL)\nlines(xfit, yfit1, col=\"purple\", lwd=2)\n\n\n\n\nBox plot:\n\n# Boxplot by group\nggplot(data = chickwts, aes(x = feed, y = weight)) +\n       stat_boxplot(geom = \"errorbar\", # Boxplot with error bars \n                    width = 0.2) +\n       geom_boxplot(fill = \"pink\", colour = \"black\", # Colors\n                    alpha = 0.9, outlier.colour = \"red\") +\n       scale_y_continuous(name = \"Weight\") +  # Continuous variable label\n       scale_x_discrete(name = \"Feed\") +      # Group label\n       ggtitle(\"Boxplot by groups ggplot2\") + # Plot title\n       theme(axis.line = element_line(colour = \"black\", # Theme customization\n                                      size = 0.25))\n\n\n\nboxplot(count ~ spray, data = InsectSprays,\n        xlab = \"Type of spray\", ylab = \"Insect count\",\n        main = \"InsectSprays data\", varwidth = TRUE, col = \"lightgray\")\n\n\n\n\nBar plot:\n\nsuppressMessages(library(scales))\nggplot(mpg, \n       aes(x = factor(class,\n                      levels = c(\"2seater\", \"subcompact\", \n                                \"compact\", \"midsize\", \n                                \"minivan\", \"suv\", \"pickup\")),\n           fill = factor(drv, \n                         levels = c(\"f\", \"r\", \"4\"),\n                         labels = c(\"front-wheel\", \n                                    \"rear-wheel\", \n                                    \"4-wheel\")))) + \n  geom_bar(position = \"fill\") +\n  scale_y_continuous(breaks = seq(0, 1, .2), \n                     label = percent) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Drive Train\",\n       x = \"Class\",\n       title = \"Automobile Drive by Class\") +\n  theme_minimal()"
  },
  {
    "objectID": "index.html#additional-graphics",
    "href": "index.html#additional-graphics",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "Additional graphics",
    "text": "Additional graphics\n\nCorrelation matrix with ggally\n\n# Quick display of two cabapilities of GGally, to assess the distribution and correlation of variables \nsuppressMessages(library(GGally))\n\nWarning: package 'GGally' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n# From the help page:\ndata(flea)\nggpairs(flea, columns = 2:4, ggplot2::aes(colour=species)) \n\n\n\n\n\n\nConnected Scatterplot\n\n# Libraries\nsuppressMessages(library(GGally))\n\n# Data set is provided by R natively\ndata <- iris\n\n# Plot\nggparcoord(data,\n    columns = 1:4, groupColumn = 5\n    ) \n\n\n\n\n\n\nDendogram\n\n# Library\nsuppressMessages(library(tidyverse))\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n# Clusterisation using 3 variables\nmtcars %>% \n  select(mpg, cyl, disp) %>% \n  dist() %>% \n  hclust() %>% \n  as.dendrogram() -> dend\n \n# Plot\npar(mar=c(7,3,1,1))  # Increase bottom margin to have the complete label\nplot(dend)\n\n\n\n\n\n\nTime series\n\n# Libraries\nsuppressMessages(library(ggplot2))\nsuppressMessages(library(dplyr))\nsuppressMessages(library(hrbrthemes))\n\nWarning: package 'hrbrthemes' was built under R version 4.2.3\n\ndf <- data.frame(date = as.Date(\"2021-01-01\") - 0:99,\n                 sales = runif(100, 10, 500) + seq(50, 149)^2)\n# Most basic bubble plot\ndati <- ggplot(df, aes(x=date, y=sales)) +\n  geom_line(color=\"green\") +\n  theme_ipsum() +\n  theme(axis.text.x=element_text(angle=45, hjust=1)) \ndati + scale_x_date(date_labels = \"%Y %b %d\", date_breaks = \"10 day\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\nMap\n\n# Load the library\nsuppressMessages(library(leaflet))\n\nWarning: package 'leaflet' was built under R version 4.2.3\n\n# Initialize the leaflet map with the leaflet() function\nm <- leaflet()\nm <- setView(m, lng = 23.7317, lat = 56.6508, zoom = 13)\nm <- addTiles(m)\n\nhomeIcon <- makeIcon(\n  iconUrl = \"https://leafletjs.com/examples/custom-icons/leaf-red.png\",\n  iconWidth = 45, iconHeight = 75,\n  iconAnchorX = 22, iconAnchorY = 75\n)\nm <- addMarkers(m, lng = 23.73272, lat = 56.65582, popup=\"ITF\", icon = homeIcon)\nm\n\n\n\n\n\n\n\nConecting routes\n\n# World map is available in the maps package\nsuppressMessages(library(maps))\n\nWarning: package 'maps' was built under R version 4.2.3\n\n# No margin\npar(mar=c(0,0,0,0))\n\n# World map\nmap('world',\n    col=\"#f2f2f2\", fill=TRUE, bg=\"white\", lwd=0.05,\n    mar=rep(0,4),border=0, ylim=c(-80,80) \n)\n# Dplyr for data wrangling and pipe function\nsuppressMessages(library(dplyr))\n\n# Cities\nLasVegas <- c(-115,36)\nParis <- c(2,49)\nRiga <- c(24,56)\n\n# Data frame\ndata <- rbind(LasVegas, Paris, Riga) %>% \n  as.data.frame()\ncolnames(data) <- c(\"long\",\"lat\")\n\npoints(x=data$long, y=data$lat, col=\"slateblue\", cex=3, pch=20)\n\n# Load geosphere\nsuppressMessages(library(geosphere))\n\nWarning: package 'geosphere' was built under R version 4.2.3\n\n# Compute the connection\ninter <- gcIntermediate(Paris,  LasVegas, n=50, addStartEnd=TRUE, breakAtDateLine=F)\n\n# Show this connection\nlines(inter, col=\"slateblue\", lwd=2)\n \n# Between Paris and Riga\ninter <- gcIntermediate(Riga,  Paris, n=50, addStartEnd=TRUE, breakAtDateLine=F)             \nlines(inter, col=\"slateblue\", lwd=2)\n\n\n\n\n\noptions(warn=0)"
  },
  {
    "objectID": "add.html",
    "href": "add.html",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "",
    "text": "Correlation matrix with ggally\n\noptions(warn=-1)\nsuppressMessages(library(GGally))\n \ndata(flea)\nggpairs(flea, columns = 2:4, ggplot2::aes(colour=species)) \n\n\n\n\n\n\nConnected Scatterplot\n\nsuppressMessages(library(GGally))\n\nggparcoord(iris,\n    columns = 1:4, groupColumn = 5,\n    title = \"Īrisu šķirnes\")\n\n\n\n\n\n\nDendogram\n\nsuppressMessages(library(tidyverse))\n\ndend <- mtcars %>% \n  select(mpg, cyl, disp) %>% \n  dist() %>% \n  hclust() %>% \n  as.dendrogram()\n \n# attālums no apakšas, kreisā, augša, labā puse\npar(mar=c(8,4,1,1))\n\nplot(dend, main=\"Auto sadalījums pa klāsteriem\", \n     col = \"red\", col.main = \"green\")\n\n\n\n# Phylogenetic trees\nsuppressMessages(library(ape))\nhc = hclust(dist(mtcars))\n\nkrasas = c(\"red\", \"blue\" , \"darkgreen\", \"pink\", \"yellow\", \"green\", \"purple\")\n# klasteru skaits\nclus7 = cutree(hc, 7)\n\n# Dendogrammu tipi\nplot(as.phylo(hc), type=\"cladogram\", tip.color = krasas[clus7], cex = 0.5, label.offset = 0.1)\n\n\n\nplot(as.phylo(hc), type=\"unrooted\",tip.color = krasas[clus7], cex = 0.3, label.offset = 0.1)\n\n\n\nplot(as.phylo(hc), type=\"fan\", tip.color = krasas[clus7], cex = 1, label.offset = 0.1)\n\n\n\nplot(as.phylo(hc), type = \"radial\", tip.color = krasas[clus7], label.offset = 0.1, cex = log(mtcars$mpg,15), col = \"red\")\n\n\n\n\n\n\nTime series\n\nsuppressMessages(library(ggplot2))\nsuppressMessages(library(dplyr))\nsuppressMessages(library(hrbrthemes))\n\n# Dati tiek uzģenerēti ar nejaušiem datiem\ndf <- data.frame(date = as.Date(\"2021-01-01\") - 0:99,\n                 sales = runif(100, 10, 500) + seq(50, 149)^2)\n\nlaiks <- ggplot(df, aes(x=date, y=sales)) +\n  geom_line(color=\"green\") +\n  ggtitle(\"Pārdošanas apjomu atspoguļojums\") +\n  scale_y_continuous(name = \"Skaits\") +\n  theme_ipsum_tw() +\n  theme(axis.text.x=element_text(angle=45, hjust=1)) \nlaiks + scale_x_date(date_labels = \"%Y %b %d\", date_breaks = \"10 day\")\n\n\n\n\n\n\nMap\n\nsuppressMessages(library(leaflet))\n\n\nm <- leaflet()\nm <- setView(m, lng = 23.7317, lat = 56.6508, zoom = 13)\nm <- addTiles(m)\n\norangeIcon <- makeIcon(\n  iconUrl = \"https://raw.githubusercontent.com/R-CoderDotCom/samples/main/marker.png\",\n  iconWidth = 35, iconHeight = 35,\n  iconAnchorX = 20, iconAnchorY = 10\n)\nm <- addMarkers(m, lng = 23.73272, lat = 56.65582, \n                popup=\"ITF\", icon = orangeIcon)\nm <- addMarkers(m, lng = 23.71252, lat = 56.64899, \n                popup=\"Ozolskvērs\", icon = orangeIcon)\nm <- addMarkers(m, lng = 23.7556, lat = 56.6609, \n                popup=\"Zemgales Olimpiskais centrs\", icon = orangeIcon)\nm <- addMarkers(m, lng = 23.68755, lat = 56.6389, \n                popup=\"Svētes palienas pļavas\", icon = orangeIcon)\nm <- addMarkers(m, lng = 23.72308, lat = 56.64768, \n                popup=\"Raiņa parks\", icon = orangeIcon)\nm\n\n\n\n\n\n\n\nConecting routes\n\nsuppressMessages(library(maps))\n\n# No margin\npar(mar=c(0,0,0,0))\n\n# World map\nmap('world',\n    col=\"lightgreen\", fill=TRUE, bg=\"blue\", lwd=0.1,\n    mar=rep(0,4), border=1, ylim=c(-40,100) \n)\n\nsuppressMessages(library(dplyr))\n\n# Pilsētu koordinātes\nLasVegas <- c(-115,36)\nParis <- c(2,49)\nRiga <- c(24,56)\nMaroka <- c(-10,28)\nHongkong <- c(114,22)\n\nsaikne <- rbind(LasVegas, Paris, Riga, Maroka, Hongkong) %>% as.data.frame()\ncolnames(saikne) <- c(\"long\",\"lat\")\n\npoints(x=saikne$long, y=saikne$lat, col=\"red\", cex=2.5, pch=20)\n\n# Ielādēt geosphere\nsuppressMessages(library(geosphere))\n\n# Saiknes izveidošana\ninter1 <- gcIntermediate(Paris,  LasVegas, n=10, addStartEnd=TRUE, breakAtDateLine=F)\nlines(inter1, col=\"yellow\", lwd=3)\n\ninter2 <- gcIntermediate(Riga,  Paris, n=10, addStartEnd=TRUE, breakAtDateLine=F)\nlines(inter2, col=\"yellow\", lwd=3)\n\ninter3 <- gcIntermediate(Paris,  Maroka, n=10, addStartEnd=TRUE, breakAtDateLine=F)\nlines(inter3, col=\"pink\", lwd=3)\n\ninter4 <- gcIntermediate(Riga, Hongkong, n=10, addStartEnd=TRUE, breakAtDateLine=F)\nlines(inter4, col=\"purple\", lwd=3)\n\n\n\noptions(warn=0)"
  },
  {
    "objectID": "graph.html",
    "href": "graph.html",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "",
    "text": "R provides a remarkable variety of graphics:\n\nScatter plot:\n\noptions(warn=-1)\n# library\nsuppressMessages(library(ggplot2))\n\n# Keep 30 first rows in the mtcars natively available dataset\ndata=head(mtcars, 30)\n\n# 1/ add text with geom_text, use nudge to nudge the text\nggplot(data, aes(x=wt, y=mpg, color = hp)) +\n  geom_point(size = 0.5, alpha = 0.8) + # Show dots\n  geom_text(\n    label=rownames(data),\n    nudge_x = 0.25, nudge_y = 0.25,\n    check_overlap = T\n  ) + \n  labs(title = \"Svara ietekme uz automašīnu nobraukumu\",\n       x = \"Svars (1000 mārciņas)\",\n       y = \"Jūdzes/(ASV) galons\") + \n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_minimal()\n\n\n\n\nHistogram:\n\nhist(USJudgeRatings$ORAL, breaks=10, col=\"red\", xlab=\"ORAL\",\n     main=\"Histogram with normal curve\")\nxfit=seq(min(USJudgeRatings$ORAL), max(USJudgeRatings$ORAL),length(20))\nyfit=dnorm(xfit,mean=mean(USJudgeRatings$ORAL))\nyfit1=yfit*0.5*length(USJudgeRatings$ORAL)\nlines(xfit, yfit1, col=\"purple\", lwd=2)\n\n\n\n\nBox plot:\n\n# Boxplot by group\nggplot(data = chickwts, aes(x = feed, y = weight)) +\n       stat_boxplot(geom = \"errorbar\", # Boxplot with error bars \n                    width = 0.2) +\n       geom_boxplot(fill = \"pink\", colour = \"black\", # Colors\n                    alpha = 0.9, outlier.colour = \"red\") +\n       scale_y_continuous(name = \"Weight\") +  # Continuous variable label\n       scale_x_discrete(name = \"Feed\") +      # Group label\n       ggtitle(\"Boxplot by groups ggplot2\") + # Plot title\n       theme(axis.line = element_line(colour = \"black\", # Theme customization\n                                      size = 0.25))\n\n\n\nboxplot(count ~ spray, data = InsectSprays,\n        xlab = \"Type of spray\", ylab = \"Insect count\",\n        main = \"InsectSprays data\", varwidth = TRUE, col = \"lightgray\")\n\n\n\n\nBar plot:\n\nsuppressMessages(library(scales))\nggplot(mpg, \n       aes(x = factor(class,\n                      levels = c(\"2seater\", \"subcompact\", \n                                \"compact\", \"midsize\", \n                                \"minivan\", \"suv\", \"pickup\")),\n           fill = factor(drv, \n                         levels = c(\"f\", \"r\", \"4\"),\n                         labels = c(\"front-wheel\", \n                                    \"rear-wheel\", \n                                    \"4-wheel\")))) + \n  geom_bar(position = \"fill\") +\n  scale_y_continuous(breaks = seq(0, 1, .2), \n                     label = percent) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Drive Train\",\n       x = \"Class\",\n       title = \"Automobile Drive by Class\") +\n  theme_minimal()\n\n\n\noptions(warn=0)"
  },
  {
    "objectID": "plots.html",
    "href": "plots.html",
    "title": "Plots",
    "section": "",
    "text": "R provides a remarkable variety of plots:\n\n\nScatter plot:\n\noptions(warn=-1)\n\nsuppressMessages(library(ggplot2))\n \n\ndata=head(mtcars, 30)\n \n# Katra punkta vizualizācija\nggplot(data, aes(x=wt, y=mpg, color = hp)) +\n  geom_point(size = 0.5, alpha = 0.8, shape=23) +\n  geom_text(\n    label=rownames(data),\n    nudge_x = 0.25, nudge_y = 0.25,\n    check_overlap = T\n  ) + \n  labs(title = \"Svara ietekme uz automašīnu nobraukumu\",\n       x = \"Svars (1000 mārciņas)\",\n       y = \"Jūdzes/(ASV) galons\") + \n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_linedraw()\n\n\n\n\n\n\nHistogram:\n\nhist(USJudgeRatings$ORAL, breaks=10, col=\"red\", xlab=\"ORAL\",\n     main=\"Histogram with normal curve\")\nxfit=seq(min(USJudgeRatings$ORAL), max(USJudgeRatings$ORAL),length(20))\nyfit=dnorm(xfit,mean=mean(USJudgeRatings$ORAL))\nyfit1=yfit*0.5*length(USJudgeRatings$ORAL)\nlines(xfit, yfit1, col=\"purple\", lwd=2)\n\n\n\nhist(mtcars$mpg, breaks=30, col=\"green\", xlab=\"Jūdzes/(ASV) galons\",\n     main=\"Histogram with not normal curve\")\nxfit=seq(min(mtcars$mpg), max(mtcars$mpg),length(20))\nyfit=dnorm(xfit,mean=mean(mtcars$mpg))\nyfit1=yfit*2*length(mtcars$mpg)\nlines(xfit, yfit1, col=\"purple\", lwd=2)\n\n\n\n\n\n\nBox plot:\n\n# Boxplot by group\nggplot(data = chickwts, aes(x = feed, y = weight)) +\n       stat_boxplot(geom = \"errorbar\", \n                    width = 0.2) +\n       geom_boxplot(fill = \"red\", colour = \"black\",\n                    alpha = 0.9, outlier.colour = \"red\") +\n       scale_y_continuous(name = \"Weight\") +\n       scale_x_discrete(name = \"Feed\") +\n       ggtitle(\"Vistas barošanas ietekme uz svaru\") +\n       theme_dark()\n\n\n\nboxplot(count ~ spray, data = InsectSprays,\n        xlab = \"Spreja veids\", ylab = \"Insektu skaits\",\n        main = \"Spreju iedarbība pret insektiem\", varwidth = TRUE, \n        col = (c(\"green\", \"blue\", \"purple\", \"yellow\")))\n\n\n\n\n\n\nBar plot:\n\nsuppressMessages(library(scales))\n\n\nggplot(mpg, \n       aes(x = factor(class,\n                      levels = c(\"2seater\", \"subcompact\",\n                                \"compact\", \"midsize\", \n                                \"minivan\", \"suv\", \"pickup\"),\n                      labels = c(\"2vietīgais\", \"Subkompakts\",\n                                 \"Kompakts\", \"Standarta\", \n                                 \"Minivens\", \"Džips\", \"Pikaps\")),\n           fill = factor(drv, \n                         levels = c(\"f\", \"r\", \"4\"),\n                         labels = c(\"priekšējā\", \n                                    \"aizmugurējā\", \n                                    \"4x4\")))) + \n  geom_bar(position = \"fill\") +\n  scale_y_continuous(breaks = seq(0, 1, .2), \n                     label = percent) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Procenti\", \n       fill = \"Piedziņa\",\n       x = \"Tips\",\n       title = \"Automobīļu sadalījums pēc tipa\") +\n  theme_dark()\n\n\n\noptions(warn=0)"
  },
  {
    "objectID": "interactive.html",
    "href": "interactive.html",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "",
    "text": "options(warn=-1)\nsuppressMessages(library(ggplot2))\nsuppressMessages(library(plotly))\nsuppressMessages(library(gapminder))\ndata(gapminder)\nggplotly(gapminder %>%\n  filter(year==2007) %>%\n  ggplot( aes(gdpPercap, lifeExp, size = pop, color= continent)) +\n  geom_point(shape=1) + geom_smooth() +\n  scale_x_log10() +\n  facet_wrap(~continent, ncol=2) +\n  theme_light())\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nggplotly(gapminder %>%\n  filter(year==2002) %>%\n  ggplot( aes(gdpPercap, lifeExp, size = pop, color= continent)) +\n  geom_point() + geom_smooth() +\n  scale_x_log10() +\n  theme_dark())\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'"
  },
  {
    "objectID": "interactive.html#heatmap",
    "href": "interactive.html#heatmap",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "Heatmap",
    "text": "Heatmap\n\n# Libraries\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(hrbrthemes))\nsuppressMessages(library(viridis))\nsuppressMessages(library(plotly))\n\n# Load data \ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/multivariate.csv\", header=T, sep=\";\")\ncolnames(data) <- gsub(\"\\\\.\", \" \", colnames(data))\n\n# Select a few country\ndata <- data %>% \n  filter(Country %in% c(\"France\", \"Sweden\", \"Italy\", \"Spain\", \"England\", \"Portugal\", \"Greece\", \"Peru\", \"Chile\", \"Brazil\", \"Argentina\", \"Bolivia\", \"Venezuela\", \"Australia\", \"New Zealand\", \"Fiji\", \"China\", \"India\", \"Thailand\", \"Afghanistan\", \"Bangladesh\", \"United States of America\", \"Canada\", \"Burundi\", \"Angola\", \"Kenya\", \"Togo\")) %>%\n  arrange(Country) %>%\n  mutate(Country = factor(Country, Country))\n\n# Matrix format\nmat <- data\nrownames(mat) <- mat[,1]\nmat <- mat %>% dplyr::select(-Country, -Group, -Continent)\nmat <- as.matrix(mat)\n\nsuppressMessages(library(heatmaply))\np <- heatmaply(mat, \n        #dendrogram = \"row\",\n        xlab = \"\", ylab = \"\", \n        main = \"\",\n        scale = \"column\",\n        margins = c(60,100,40,20),\n        grid_color = \"white\",\n        grid_width = 0.00001,\n        titleX = FALSE,\n        hide_colorbar = TRUE,\n        branches_lwd = 0.1,\n        label_names = c(\"Country\", \"Feature:\", \"Value\"),\n        fontsize_row = 5, fontsize_col = 5,\n        labCol = colnames(mat),\n        labRow = rownames(mat),\n        heatmap_layers = theme(axis.line=element_blank())\n        )\n\n\noptions(warn=0)"
  },
  {
    "objectID": "interactive.html#streamgraph",
    "href": "interactive.html#streamgraph",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "Streamgraph",
    "text": "Streamgraph\n\n# Libraries\nsuppressMessages(library(rgl))\n\n# This is to output a rgl plot in a rmarkdown document.\n# setupKnitr()\n\n# Data: the iris data is provided by R\ndata <- iris\n\n# Add a new column with color\nmycolors <- c('royalblue1', 'darkcyan', 'oldlace')\ndata$color <- mycolors[ as.numeric(data$Species) ]\n\n# Plot\nplot3d( \n  x=data$`Sepal.Length`, y=data$`Sepal.Width`, z=data$`Petal.Length`, \n  col = data$color, \n  type = 's', \n  radius = .1,\n  main=\"Sepal data\",\n  xlab=\"Sepal Length\", ylab=\"Sepal Width\", zlab=\"Petal Length\")\nrglwidget()\n\n\n\n\n\n\noptions(warn=0)"
  },
  {
    "objectID": "interactive.html#d-scatterplot",
    "href": "interactive.html#d-scatterplot",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "3D Scatterplot",
    "text": "3D Scatterplot\n\n# Libraries\nsuppressMessages(library(rgl))\n\n# This is to output a rgl plot in a rmarkdown document.\n# setupKnitr()\n\ndata <- iris\n\n# Add a new column with color\nkrasas <- c('pink', 'yellow', 'lightgreen')\nkrasugamma <- krasas[ as.numeric(data$Species) ]\n\n# Plot\nplot3d( \n  x=data$`Sepal.Length`, y=data$`Sepal.Width`, z=data$`Petal.Length`, \n  col = krasugamma, \n  type = 's', \n  radius = .1,\n  main='Irisa ziedu proporcijas',\n  xlab=\"Pumpura garums\", ylab=\"Pumpura platums\", zlab=\"Ziedlapas garums\")\n\nlegend3d(\"topright\", legend = paste(c('Zems', 'Vidējs', 'Liels')), \n         pch = 8, col = c('pink', 'yellow', 'lightgreen'))\nrglwidget()"
  },
  {
    "objectID": "interactive.html#network-diagram",
    "href": "interactive.html#network-diagram",
    "title": "Brīvprogrammatūra R statistikā",
    "section": "Network diagram",
    "text": "Network diagram\n\nsuppressMessages(library(igraph))\nsuppressMessages(library(networkD3))\n\ngrafs <- data.frame(\n  from=c(\"Aluksne\", \"Aluksne\", \"Balvi\", \"Jelgava\", \"Cesis\", \"Jelgava\", \"Marupe\", \"Balvi\", \"Cesis\", \"Jelgava\", \"Smiltene\", \"Liepaja\", \"Ventspils\"),\n  to=c(\"Bergi\", \"Marupe\", \"Smiltene\", \"Aluksne\", \"Cesis\", \"Riga\", \"Bergi\", \"Riga\", \"Aluksne\", \"Cesis\", \"Aluksne\", \"Balvi\", \"Liepaja\")\n)\n\np <- simpleNetwork(grafs, height=\"100px\", width=\"100px\",        \n                   Source = 1,\n                   Target = 2,\n                   linkDistance = 10,          # attālums starp virsotnēm\n                   charge = -300,              # pretestība vai pievilkšanās\n                   fontSize = 14,\n                   fontFamily = \"serif\",\n                   linkColour = \"#666\",\n                   nodeColour = \"blue\",\n                   opacity = 0.9,              # caurspīdīgums\n                   zoom = T\n)\n\np\n\n\n\n\n\n\noptions(warn=0)"
  }
]